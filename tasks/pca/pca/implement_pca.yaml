title: PCA implementieren
question: |
  Implementieren Sie eine Klasse `CustomPCA`, die von `BaseEstimator` und `TransformerMixin` ableitet. (ErklÃ¤re warum!)
  
  Diese Klasse muss die Methoden `fit(self, X, y=None)` `transform(self, X)`, `fit_transform(self, X, y=None)`
  implementieren (die `y` Parameter werden nicht benÃ¶tigt, mÃ¼ssen aber als Parameter vorhanden sein.
  
  Weiterhin soll `init(self, n_components)` in der Klasse vorliegen, in der Ã¼ber `n_components`
  festgelegt wird, wie viele Dimensionen die Ausgabe haben soll.
  
  **ğŸš€Bonus:**
  Erstelle eine Beispiel, bei der du einen echten Datensatz einlÃ¤dst und mit `CustomPCA` transformierst.
  Baue Sie dabei gerne in eine [Pipeline](https://scikit-learn.org/stable/modules/compose.html) ein.

tip: |
  Legen Sie ein Feld `components_` an, in dem die Eigenvektoren gespeichert werden, sodass die 
  `transform` Funktion wie folgt implementiert werden werden kann:
  
  ```python
  def transform(self, X):
      return np.dot(X - np.mean(X, axis=0), self.components_.T)
  ```
